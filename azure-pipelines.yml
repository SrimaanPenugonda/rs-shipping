# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include: [ "*" ]
  tags:
    include: [ "*" ]

pool: Default

steps:

#  - task: Docker@2
#    inputs:
#      containerRegistry: 'docker-hub'
#      repository: 'rkalluru/d53-rs-shipping'
#      command: 'buildAndPush'
#      Dockerfile: '**/Dockerfile'
#      tags: '$(Build.BuildId)'
#
  - script: |
      sudo yum install maven -y
      mvn clean package
    displayName: Compile Code
#
  - script: |
      curl -s https://raw.githubusercontent.com/linuxautomations/labautomation/master/tools/sonar-scanner/install.sh | sudo bash
    displayName: 'Setup Sonar Scanner'

  - script: |
      sonar-scanner -Dsonar.projectKey=shipping -Dsonar.sources=. -Dsonar.host.url=http://3.236.121.125:9000 -Dsonar.login=52ccc63af3a1bf49e8940d89d370ff07bf1bf341 
    displayName: 'Run Sonar Scan'
#
  - script: |
      mkdir $(Build.SourcesDirectory)/publish
      cp -r target/shipping-1.0.jar $(Build.SourcesDirectory)/publish/shipping.jar
    displayName: Prepare Artifacts
#
  - task: UniversalPackages@0
    condition: contains(variables['Build.SourceBranch'],'tags')
    inputs:
      command: 'publish'
      publishDirectory: '$(Build.SourcesDirectory)/publish'
      feedsToUsePublish: 'internal'
      vstsFeedPublish: '736b4ce8-9eaf-495c-9983-ed63d9930834'
      vstsFeedPackagePublish: 'rsshipping'
      versionOption: 'custom'
      versionPublish: '$(Build.SourceBranchName)'
    displayName: Publish Artficats