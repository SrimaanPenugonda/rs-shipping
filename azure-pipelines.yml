# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include: [ "*" ]
  tags:
    include: [ "*" ]

pool: Default

steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: 'env'
    displayName: Env Command #this task helps to check the BUILD parameters

  - task: Docker@2
    inputs:
      containerRegistry: 'docker-hub'
      repository: 'srimaanaws2021/rs-shipping'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
      tags: 'latest'
#
#  - script: |
#      mvn  package
#    displayName: Compile Code
#
#  - script: |
#      curl -s https://raw.githubusercontent.com/linuxautomations/labautomation/master/tools/sonar-scanner/install.sh | sudo bash
#      export SONAR_SCANNER_OPTS="-Xmx512m"
#      export MAVEN_OPTS="-Xmx512m"
#    displayName: 'Setup Sonar Scanner'
#
#  - script: |
#      sonar-scanner \
#        -Dsonar.projectKey=shipping \
#        -Dsonar.sources=. \
#        -Dsonar.host.url=http://34.204.182.34:9000 \
#        -Dsonar.login=f8abf1deef92710b577a6559040eedd5ec187eb7 \
#        -Dsonar.java.binaries=target/classes
#    displayName: 'Run Sonar Scan'
##
#  - script: |
#      mkdir $(Build.SourcesDirectory)/publish
#      cp -r target/shipping-1.0.jar $(Build.SourcesDirectory)/publish/shipping.jar
#    displayName: Prepare Artifacts
##
#  - task: UniversalPackages@0
#    condition: contains(variables['Build.SourceBranch'],'tags')
#    inputs:
#      command: 'publish'
#      publishDirectory: '$(Build.SourcesDirectory)/publish'
#      feedsToUsePublish: 'internal'
#      vstsFeedPublish: '736b4ce8-9eaf-495c-9983-ed63d9930834'
#      vstsFeedPackagePublish: 'rsshipping'
#      versionOption: 'custom'
#      versionPublish: '$(Build.SourceBranchName)'
#    displayName: Publish Artficats